; comment for value1
value_1 : 'value'  ; inline comment for value1

value_1_2 : value  ; inline comment for value1_2

; comment for value2
value_2 : 'value with spaces'

value_2_2 : value with spaces unquoted

; comment for value3
value_3 : 'value with \"quotes\"'

value_4 : 'value with \'single quotes\''

; comment for value5
value_5 : '''multiline
value'''

value_6 : ' value with leading space'

value_7 : 'value with trailing space '

value_8 : 'value with escaped\nnew line inside'

value_9 : escape sequences are NOT interpreted (e.g. \n) inside unquoted values

; section comment
; goes here
[custom]

; unquoted empty string
value_1 : 

; empty string
value_2 : ''

; triple-quoted empty string
value_3 : ''''''

; unquoted string
value_4 : hello

; ends with EOF
value_5 : world

; Writeback test-only automatically added JSON representation:
; {
;     "": {
;         "value_1": "value",
;         "value_1_2": "value",
;         "value_2": "value with spaces",
;         "value_2_2": "value with spaces unquoted",
;         "value_3": "value with \"quotes\"",
;         "value_4": "value with 'single quotes'",
;         "value_5": "multiline\nvalue",
;         "value_6": " value with leading space",
;         "value_7": "value with trailing space ",
;         "value_8": "value with escaped\nnew line inside",
;         "value_9": "escape sequences are NOT interpreted (e.g. \\n) inside unquoted values"
;     },
;     "custom": {
;         "value_1": "",
;         "value_2": "",
;         "value_3": "",
;         "value_4": "hello",
;         "value_5": "world"
;     }
; }
